>>>> What I'm showing you
->>> Creating a repository
->>> Working with a local repository
-->> How does git track files (100 level)
->>> Branching and merging
-->> Branching (why and how)
-->> Merging
---> Regular merge
---> Rebase (when and why)
->>> Remotes
-->> Cloning
-->> Pulling
-->> Pushing
->>> Miscellanea
-->> Aliases
-->> .gitignore
>>>> What I'm not showing you (but is worth exploring another time)
->>> Installing git
-->> Linux
-->> Windows (msysgit)
->>> Connecting to github
-->> Creating an asymetric key
-->> Adding your public key to github
>>>> Links
->>> Git
-->> http://www.eecs.harvard.edu/~cduan/technical/git/
-->> http://gitref.org/
-->> http://www.kernel.org/pub/software/scm/git/docs/everyday.html
->>> Github
-->> http://help.github.com/

** Basic commit
 * Making a repository
mkdir git-demo
mkdir origin
cd git-demo/origin/
git init
 * Tracking files
echo "hello world" > hello.txt
ls
git status
git add hello.txt
git status
git commit -m "added hello world"
git status
vi hello.txt
    - Add a period
git commit -m "added punctuation"
git status
git commit -a -m "added punctuation"
 * Staging multiple files
echo "foo" > bar.txt
mkdir foo
echo "bar" > foo/foo.txt
git commit -a -m "added multiple files at once"
git add .
git commit -a -m "added multiple files at once"
git status
 * Reset
vi hello.txt
    - Add garbage
echo "junk" > junk.txt
git status
git reset
git status
git add .
git status
git reset
git status
vi hello.txt
git reset --hard
vi hello.txt
 * Cleaning
git status
git clean -n
git clean -f
git status
 * Log
git log

** Branch per feature
 * Create a branch
git checkout -b italian
 * Rename the branch
git branch -m italian italiano
 * Edit files and merge
vi hello.txt
    - Add "ciao mondo."
git commit -a -m "added italian"
git checkout master
git branch
gitk
gitk --all
git merge italiano
vi hello.txt

** Merge conflicts
git checkout -b francais
vi hello.txt
    - Add "bonjour monde" (I to insert at the beginning of the line)
git commit -a -m "added bonjour"
vi hello.txt
	- Add exclamations to the text (A to append at the end of the line)
git commit -a -m "added bang"
git checkout master
vi hello.txt
    - Add capitalization (r to replace a single character"
git commit -a -m "capitalization"
gitk --all
git merge francais
git mergetool
git commit -a -m "merged from francais"

** Rebase
gitk --all
git reset HEAD^ --hard
gitk --all
git rebase francais
git mergetool
git rebase --continue
gitk --all
git clean -f

** Cloning and remotes
 * Creating a clone
cd ..
git clone /c/git-demo/origin/ clone
cd clone
ls
git log
 * Pull from clone
vi hello.txt
    - Add "Hola mondo!"
git commit -a -m "added spanish hello"
cd ../origin
git pull /c/git-demo/clone/
 * Pull from origin
vi hello.txt
    - change "Hola Mondo" to "Hola el Mondo"
git commit -a -m "corrected grammar in spanish translation"
cd ../clone
git pull
 * Adding a remote
vi hello.txt
    - change "Hello world!" to "Hello the world!"
git commit -a -m "being snarky"
cd ../origin/
git remote add my-clone /c/git-demo/clone/
git remote
git pull my-clone master

** Push
cd ../clone/
vi hello.txt
    - add le and il
git commit -a -m 'added "the" all over'
git push origin master
cd ..
mkdir looks-like-svn
cd looks-like-svn
git init
git config --bool core.bare true
cd ../clone/
git remote add central /c/git-demo/looks-like-svn/
git push central master
cd ../origin
git remote add central /c/git-demo/looks-like-svn/
git pull central master
vi hello.txt

** Tagging
git tag v1.0
vi hello.txt
    - Add some stuff
git commit -a -m "diverging changes"
git tag v2.0
git checkout -b v1.0-maintenance v1.0
vi hello.txt

** Aliases
git config alias.ci "commit -a -m"
vi hello.txt
    - change anything"
git ci "this works now"

** gitignore
echo "*.not.txt" > .gitignore
echo "this" > this.txt
echo "not this" > this.not.txt
git status
git add .
git ci "ignoring *.not.this"

** Getting help
git status --help

https://github.com/WalkingDisaster/GMS